name: Check for new release

on:
  pull_request:
    types: [opened, synchronize, labeled]

jobs:
  check_for_release:
    name: Check For Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for appVersion change
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'new release') }}
        run: |
          echo "Checking for appVersion changes..."
          if git diff origin/${{ github.base_ref }} -- deployments/chart/Chart.yaml | grep -qe "^[+-]appVersion: "; then
            echo "appVersion has changed. Failing the job."
            exit 1
          else
            echo "No appVersion changes detected."
          fi

  post_message:
    name: Post message to warn of new release
    runs-on: ubuntu-latest
    needs: check_for_release
    if: ${{ failure() && !contains(github.event.pull_request.labels.*.name, 'needs approval') && github.event.action != 'labeled' }}
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract appVersion
        id: extract_appversion
        run: |
          appversion=$(yq e '.appVersion' ./deployments/chart/Chart.yaml)
          echo "appversion=$appversion" >> $GITHUB_ENV

      - name: Post warning comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: "⚠️ Warning: Merging this PR will result in a new release because the `appVersion` in Chart.yaml has changed to `${{ env.appversion }}`. Please confirm this by replacing the 'needs approval' label with the 'new release' label before merging."

      - name: Set a label on the pull request
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "needs approval"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
