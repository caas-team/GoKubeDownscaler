{{- if .Values.webhookController.enabled }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.kube-downscaler.k8s
  {{- if .Values.webhookController.certManager.enabled }}
  annotations:
    {{- if and (not .Values.webhookController.certManager.ca.generate) .Values.webhookController.certManager.issuer.generate }}
    cert-manager.io/inject-ca-from-secret: {{ .Release.Namespace }}/{{ .Values.webhookController.certManager.ca.secretName }}
    {{- else }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "go-kube-downscaler.webhookController.fullname" . }}-tls-certificates
    {{- end }}
  {{- end }}
webhooks:
  - name: webhook.kube-downscaler.k8s
    rules:
{{- include "go-kube-downscaler.webhookresources" . | trim | nindent 6 }}
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - {{ .Release.Namespace }}
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: {{ include "go-kube-downscaler.fullname" . }}-webhook
        path: /validate-workloads
        port: 443
    matchConditions:
      - name: 'exclude-downscaler-origin'
        expression: 'request.userInfo.username != "system:serviceaccount:{{ .Release.Namespace }}:{{ include "go-kube-downscaler.serviceAccountName" . }}"'
    admissionReviewVersions: ["v1"]
    sideEffects: None
    failurePolicy: {{ .Values.webhookController.mutatingWebhookConfiguration.failurePolicy }}
    timeoutSeconds: {{ .Values.webhookController.mutatingWebhookConfiguration.timeoutSeconds }}
{{- end }}
