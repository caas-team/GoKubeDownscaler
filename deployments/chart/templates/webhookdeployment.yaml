{{- if .Values.webhookController.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "go-kube-downscaler.webhookController.fullname" . }}
  labels:
    {{- include "go-kube-downscaler.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webhookController.replicaCount }}
  selector:
    matchLabels:
      {{- include "go-kube-downscaler.webhookController.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "go-kube-downscaler.webhookController.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "go-kube-downscaler.webhookController.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}-webhook
          image: "{{ .Values.webhookController.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - --include-resources={{ join "," .Values.includedResources }}
            {{- if (not .Values.webhookController.certManager.enabled) }}
            - --internal-cert-rotation
            - --service-name={{ include "go-kube-downscaler.webhookController.fullname" . }}
            - --cluster-domain={{ .Values.webhookController.clusterDomain }}
            - --tls-secret-name={{ include "go-kube-downscaler.webhookController.fullname" . }}
            {{- end }}
          {{- if .Values.constrainedNamespaces }}
            - --namespace={{ join "," .Values.constrainedNamespaces }}
          {{- end }}
          ports:
            - containerPort: 443
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
                optional: true
          resources:
            {{- toYaml .Values.webhookController.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: tls
              mountPath: "/etc/webhook/tls"
              readOnly: true
          {{- if .Values.webhookController.healthProbes.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            failureThreshold: {{ .Values.webhookController.healthProbes.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.webhookController.healthProbes.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.webhookController.healthProbes.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.webhookController.healthProbes.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.webhookController.healthProbes.readinessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: {{ .Values.webhookController.healthProbes.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.webhookController.healthProbes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.webhookController.healthProbes.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.webhookController.healthProbes.livenessProbe.timeoutSeconds }}
          {{- end }}
      volumes:
        - name: tls
          secret:
            secretName: {{ include "go-kube-downscaler.webhookController.fullname" . }}
            optional: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
