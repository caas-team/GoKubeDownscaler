linters-settings:
  wsl:
    allow-cuddle-declarations: true
  depguard:
    rules:
      logger:
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: use the standard library's slog.Logger instead
          - pkg: "github.com/ueber-go/zap"
            desc: use the standard library's slog.Logger instead
  dupl:
    threshold: 100
  funlen:
    lines: -1 # the number of lines (code + empty lines) is not a right metric and leads to code without empty line or one-liner.
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
  gocyclo:
    min-complexity: 15
  gofmt:
    rewrite-rules:
      - pattern: "interface{}"
        replacement: "any"
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  mnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "3"
    ignored-functions:
      - strings.SplitN

  govet:
    enable-all: true
    disable:
      - fieldalignment # disabled because it's too strict, it checks if struct fields are sorted by size
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  misspell:
    locale: US
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: true # require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
  revive:
    rules:
      - name: unexported-return
        disabled: true
      - name: unused-parameter
  gomoddirectives:
    replace-allow-list:
      - sigs.k8s.io/controller-runtime # remove this once keda supports v0.20.x

linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - err113
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    #- exhaustruct # structs, esp. option structs are not always supposed to be exhausted on initialization
    - exptostd
    - fatcontext
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - iface
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    #- nlreturn # wsl has a better implementation of the same principle, where you only have to put whitespaces if the block is longer
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - usetesting
    - testableexamples
    - testifylint
    #- testpackage # we might also want to test unexported functions
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint

output:
  print-linter-name: true

issues:
  max-same-issues: 50
  exclude-dirs:
    - test/data # test files
    - test/testdata # test files
    - pb # protobuf files
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd # test files can have magic numbers
        - revive # test files can have unused parameters
        - forcetypeassert # test files can have unchecked type assertion
        - wrapcheck # test files can have unwrapped errors
        - govet # test files can have global variables
        - gochecknoglobals # test files can have global variables
    - source: "//nolint: "
      linters: [lll] # disable long line linter on lines with '//nolint:' directive
  fix: true

run:
  timeout: 5m
