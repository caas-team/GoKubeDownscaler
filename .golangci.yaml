version: "2"
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - err113
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    #- exhaustruct # structs, esp. option structs are not always supposed to be exhausted on initialization
    - exptostd
    - fatcontext
    - forbidigo
    - forcetypeassert
    - funlen
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - grouper
    - iface
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    #- nlreturn # wsl has a better implementation of the same principle, where you only have to put whitespaces if the block is longer
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - tagalign
    - tagliatelle
    - testableexamples
    - testifylint
    #- testpackage # we might also want to test unexported functions
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint
  settings:
    depguard:
      rules:
        logger:
          deny:
            - pkg: github.com/sirupsen/logrus
              desc: use the standard library's slog.Logger instead
            - pkg: github.com/ueber-go/zap
              desc: use the standard library's slog.Logger instead
    dupl:
      threshold: 100
    funlen:
      lines: -1
      statements: 50
    goconst:
      min-len: 2
      min-occurrences: 3
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
        - whyNoLint
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gocyclo:
      min-complexity: 15
    gomoddirectives:
      replace-allow-list:
        - sigs.k8s.io/controller-runtime
    govet:
      disable:
        - fieldalignment
      enable-all: true
      settings:
        printf:
          funcs:
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    lll:
      line-length: 140
    misspell:
      locale: US
    mnd:
      checks:
        - argument
        - case
        - condition
        - return
      ignored-numbers:
        - "0"
        - "1"
        - "2"
        - "3"
      ignored-functions:
        - strings.SplitN
    nolintlint:
      require-explanation: true
      require-specific: true
      allow-unused: false
    revive:
      rules:
        - name: unexported-return
          disabled: true
        - name: unused-parameter
    wsl:
      allow-cuddle-declarations: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - forcetypeassert
          - gochecknoglobals
          - govet
          - mnd
          - revive
          - wrapcheck
        path: _test\.go
      - linters:
          - lll
        source: "//nolint: "
    paths:
      - test/data
      - test/testdata
      - pb
      - third_party$
      - builtin$
      - examples$
issues:
  max-same-issues: 50
  fix: true
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  settings:
    gofmt:
      rewrite-rules:
        - pattern: interface{}
          replacement: any
    goimports:
      local-prefixes:
        - github.com/golangci/golangci-lint
  exclusions:
    generated: lax
    paths:
      - test/data
      - test/testdata
      - pb
      - third_party$
      - builtin$
      - examples$
